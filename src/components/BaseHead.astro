---
import '../styles/global.css'
import { SITE_TITLE } from '../consts'

interface Props {
  title: string
  description: string
  image?: string
}

// Fallback base site URL (replace with your actual site URL)
const site = Astro.site ?? 'https://brickeyportfolio.netlify.app'

// Fallback pathname (root) if Astro.url is undefined during prerender
const pathname = Astro.url?.pathname ?? '/'

// Construct URLs safely
const canonicalURL = new URL(pathname, site)
const { title, description, image = '/blog-placeholder-1.jpg' } = Astro.props
const imageURL = new URL(image, site)
const pageURL = new URL(pathname, site)
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/rss+xml"
  title={SITE_TITLE}
  href={new URL('rss.xml', site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL.toString()} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={pageURL.toString()} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageURL.toString()} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={pageURL.toString()} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageURL.toString()} />
